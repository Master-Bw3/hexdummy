# questions

advanced:
  type: bool
  help: Show advanced options?
  default: false

modid:
  type: str
  validator: |
    {%- import "macros/validators.jinja" as validators -%}
    {{- validators.not_empty(modid) -}}
    {{- validators.regex(modid, "^[a-z][a-z0-9_]{1,63}$") -}}

classname:
  when: "{{ advanced }}"
  type: str
  help: "classname base (eg. '{{ modid|capitalize }}' -> '{{ modid|capitalize }}Client.java')"
  default: "{{ modid|capitalize }}"
  validator: |
    {%- import "macros/validators.jinja" as validators -%}
    {{- validators.not_empty(classname) -}}
    {{- validators.java_identifier(classname) -}}

display_name:
  type: str
  default: "{{ classname }}"

description:
  type: str
  default: "{{ display_name }} addon for Hex Casting"

github_user:
  type: str
  validator: |
    {%- import "macros/validators.jinja" as validators -%}
    {{- validators.not_empty(github_user) -}}

github_repo:
  type: str
  default: "{{ modid }}"

default_branch:
  when: "{{ advanced }}"
  type: str
  default: main

sources_url:
  when: "{{ advanced }}"
  type: str
  default: "https://github.com/{{ github_user }}/{{ github_repo }}"

homepage_url:
  when: "{{ advanced }}"
  type: str
  default: "https://{{ github_user|lower }}.github.io/{{ github_repo }}"

mod_version:
  when: "{{ advanced }}"
  type: str
  default: "0.1.0"

java_version:
  when: "{{ advanced }}"
  type: int
  default: 17

package:
  type: str
  default: "io.github.{{ github_user|lower }}.{{ modid }}"
  validator: |
    {%- import "macros/validators.jinja" as validators -%}
    {{- validators.not_empty(package) -}}
    {{- validators.java_package(package) -}}

capitalize_platforms:
  when: "{{ advanced }}"
  type: bool
  help: Capitalize platform directory names? (eg. Common vs common)
  default: false

kotlin:
  type: bool
  help: Use Kotlin?
  default: true

mappings_name:
  type: str
  help: "Mappings (note: Hex Casting uses Mojmap)"
  choices:
    - Mojmap
    - Yarn
  default: Mojmap

minecraft_version:
  type: str
  help: "Minecraft version"
  choices:
    - "1.19.2"
    - "1.20.1"

# static/computed values

common_path:
  when: false
  default: "{{ 'Common' if capitalize_platforms else 'common' }}"

fabric_path:
  when: false
  default: "{{ 'Fabric' if capitalize_platforms else 'fabric' }}"

forge_path:
  when: false
  default: "{{ 'Forge' if capitalize_platforms else 'forge' }}"

package_path:
  when: false
  default: "{{ package|replace('.', '/') }}"

book_id_path:
  when: false
  default: "{{ modid }}book"

# for better hexdoc compat
gradle_mod_version_key:
  when: false
  default: modVersion

# Copier settings

_subdirectory: "templates/{{ minecraft_version }}"

_answers_file: .copier-answers.hexdummy.yml

_exclude:
  # for copier-template-tester
  - ".ctt"
  - "ctt.toml"
  # defaults (https://copier.readthedocs.io/en/latest/configuring/#exclude)
  - "copier.yaml"
  - "copier.yml"
  - "~*"
  - "*.py[co]"
  - "__pycache__"
  - ".git"
  - ".DS_Store"
  - ".svn"
